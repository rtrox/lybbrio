// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"fmt"
	"lybbrio/internal/ent/author"
	"lybbrio/internal/ent/book"
	"lybbrio/internal/ent/bookfile"
	"lybbrio/internal/ent/identifier"
	"lybbrio/internal/ent/language"
	"lybbrio/internal/ent/publisher"
	"lybbrio/internal/ent/schema/ksuid"
	"lybbrio/internal/ent/series"
	"lybbrio/internal/ent/shelf"
	"lybbrio/internal/ent/tag"
	"lybbrio/internal/ent/task"
	"lybbrio/internal/ent/user"
	"lybbrio/internal/ent/userpermissions"
)

// prefixMap maps KSUID prefixes to table names.
var prefixMap = map[ksuid.ID]string{
	"atr": author.Table,
	"bok": book.Table,
	"fil": bookfile.Table,
	"idn": identifier.Table,
	"lng": language.Table,
	"pub": publisher.Table,
	"srs": series.Table,
	"shf": shelf.Table,
	"tag": tag.Table,
	"tsk": task.Table,
	"usr": user.Table,
	"prm": userpermissions.Table,
}

// IDToType maps a pulid.ID to the underlying table.a
func IDToType(ctx context.Context, id ksuid.ID) (string, error) {
	if len(id) < 4 {
		return "", fmt.Errorf("IDToType: id too short")
	}
	prefix := id[:4]
	prefix = prefix[:3] // remove underscore
	typ := prefixMap[prefix]
	if typ == "" {
		return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", prefix)
	}
	return typ, nil
}

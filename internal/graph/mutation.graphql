input CreateShelfInput {
    name: String!
    description: String
    public: Boolean
    bookIDs: [ID!]
}

"""
CreateTaskInput is used for create Task object.
Input was generated by ent.
"""
input CreateTaskInput {
  type: TaskTaskType!
}

"""
CreateUserInput is used for create User object.
"""
input CreateUserInput {
  username: String!
  email: String!
  password: String
  userPermissions: CreateUserPermissionsInput!
}

"""
UpdateUserInput is used for update User object.
"""
input UpdateUserInput {
  username: String
  email: String
  password: String
}

type Mutation {
    # The input and the output are types generated by Ent.
    createBook(input: CreateBookInput!): Book # Delete later, should only be createable from disk.
    updateBook(id: ID!, input: UpdateBookInput!): Book

    createAuthor(input: CreateAuthorInput!): Author
    updateAuthor(id: ID!, input: UpdateAuthorInput!): Author

    createShelf(input: CreateShelfInput!): Shelf
    updateShelf(id: ID!, input: UpdateShelfInput!): Shelf

    createTag(input: CreateTagInput!): Tag
    updateTag(id: ID!, input: UpdateTagInput!): Tag

    createPublisher(input: CreatePublisherInput!): Publisher
    updatePublisher(id: ID!, input: UpdatePublisherInput!): Publisher

    createLanguage(input: CreateLanguageInput!): Language
    updateLanguage(id: ID!, input: UpdateLanguageInput!): Language

    createSeries(input: CreateSeriesInput!): Series
    updateSeries(id: ID!, input: UpdateSeriesInput!): Series

    createIdentifier(input: CreateIdentifierInput!): Identifier
    updateIdentifier(id: ID!, input: UpdateIdentifierInput!): Identifier

    createUser(input: CreateUserInput!): User
    updateUser(id: ID!, input: UpdateUserInput!): User
    # TODO: User Mutations should have a more bespoke flow.

    createTask(input: CreateTaskInput!): Task
}
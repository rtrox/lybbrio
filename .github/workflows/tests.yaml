name: Run Tests
on:
  workflow_call:



jobs:
  check-changed-files:
    runs-on: ubuntu-latest
    outputs:
      go-files: ${{ steps.changes.outputs.go-files }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            go-files:
              - '**.go'
              - 'go.mod'
              - 'go.sum'
            linter-configs:
              - '.github/lint/**'

  pre-commit-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --config .github/lint/precommit-ci.yaml

  golang-basic-lint:
    # Super Cheap, Always Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.21.4"
      - name: Check Go Fmt
        run: |
          go version
          go fmt ./...
          git diff --exit-code
      - name: Check Go mod
        run: |
          go version
          go mod tidy
          git diff --exit-code

  golangci-lint:
    needs: check-changed-files
    if: needs.check-changed-files.outputs.go-files == 'true' || needs.check-changed-files.outputs.linter-configs == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      checks: write
    steps:
      - uses: actions/setup-go@v5
        if: steps.changes.outputs.go-files == 'true'
        with:
          go-version: ">=1.21.4"
      - uses: golangci/golangci-lint-action@v6
        if: steps.changes.outputs.go-files == 'true'
        with:
          version: v1.54
          args: --timeout 5m --config .github/lint/golangci.yaml

  go-tests:
    needs: check-changed-files
    if: needs.check-changed-files.outputs.go-files == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            go-files:
              - '**.go'
              - 'go.mod'
              - 'go.sum'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.21.4"
      - name: Tidy
        run: |
          go version
          go mod tidy
      - name: Run Unit tests
        run: |
          go version
          go test -v -race -covermode atomic -coverprofile=covprofile ./...

      - name: Install goveralls
        run: |
          go version
          go install github.com/mattn/goveralls@latest

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github
